import idaapi
import idautils
import ida_hexrays

hammering_apis = []

def cbImport(ea, name, ordinal):
    # Count num of calls to the API
    xrefs = list(idautils.CodeRefsTo(ea, 0))
    num_calls = len(xrefs)
    print(f"[+] Num of calls {name} API is {num_calls}")

    if num_calls > 400:
        hammering_apis.append(name)

    # Continue enumeration
    return True

num_imports = idaapi.get_import_module_qty()
for i in range(num_imports):
    name = idaapi.get_import_module_name(i)
    # Enumerate module imports
    idaapi.enum_import_names(i, cbImport)


class myhooks_t(ida_hexrays.Hexrays_Hooks):
    # Hook function printing notification
    def func_printed(self, cfunc):
        i = 0
        code = cfunc.pseudocode
        while i < len(code):
            # Erase the pseudocode line if it contains one of the bad APIs
            if any(api in code[i].line for api in hammering_apis):
                code.erase(code[i])
                continue
            i += 1
        return 0

myhooks = myhooks_t()
myhooks.hook()
