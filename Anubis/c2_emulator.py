import base64
from arc4 import ARC4
import argparse
import requests

# globals
ENGLISH_CHARS = ["Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "A", "S", "D", "F", "G", "H", "J", "K", "L", "Z", "X", "C", "V", "B", "N", "M", "q", "w", "e", "r", "y", "u", "i", "o", "p", "a", "s", "d", "f", "g", "h", "j", "k", "l", "z", "x", "c", "v", "b", "n", "m", "=", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
CHINESE_CHARS = ["需", "要", "意", "在", "中", "并", "没", "有", "个", "概", "念", "小", "语", "拼", "亡", "及", "注", "鲜", "新", "死", "之", "类", "阿", "努", "比", "拉", "丁", "化", "体", "系", "都", "只", "斯", "一", "套", "用", "恶", "件", "来", "标", "音", "的", "符", "号", "而", "不", "是", "字", "母", "寂", "寞", "肏", "你", "妈", "屄", "引", "脚", "吸", "员", "会", "膏", "药"]

# utilities
def replaceChinese(data):
	for i in range(len(ENGLISH_CHARS)):
		data = data.replace(CHINESE_CHARS[i], ENGLISH_CHARS[i])
	return data

def getBetween(data, tag1, tag2):
	try:
		return data[data.index(tag1)+len(tag1) : data.rindex(tag2)]
	except:
		return ""

# decrypt data sent or received by Anubis
def decryptData(data, key):
	decoded = base64.b64decode(bytes(data, "utf-8"))
	rc4 = ARC4(key)
	return rc4.decrypt(decoded)

# fetch new C2 domains from a webpage (Twitter, Telegram, ...)
def fetchNewC2(url, tag1, tag2, key):
	response = requests.get(url)
	data = response.content.decode("utf-8").replace(" ", "")
	data = getBetween(data, tag1, tag2)
	data = replaceChinese(data)
	return decryptData(data, key)

def keyError():
	print("RC4 key required to decrypt the data")
	exit()

def main():
	parser = argparse.ArgumentParser()
	parser.add_argument("--url", help="URL for fetching new C2 domains")
	parser.add_argument("--c2start", help="Starting tag of the C2 url in the webpage")
	parser.add_argument("--c2end", help="Ending tag of C2 url in the webpage")
	parser.add_argument("--decrypt", help="Data to decrypt")
	parser.add_argument("--key", help="RC4 decryption key")
	args = parser.parse_args()

	if args.url:
		if not args.key:
			keyError()
		if (not args.c2start) or (not args.c2end):
			print("Please provide C2 url start and end")
		print("[+] Fetched C2: {}".format(fetchNewC2(args.url, args.c2start, args.c2end, args.key)))

	elif args.decrypt:
		if not args.key:
			keyError()
		print("[+] Decrypted data: {}".format(decryptData(args.decrypt, args.key)))

	else:
		parser.print_help()

if __name__ == '__main__':
	main()